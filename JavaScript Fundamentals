function getLearnerData(CourseInfo, AssignmentGroup, LearnerSubmissions) {
    if (AssignmentGroup.course_id !== CourseInfo.id) {
        throw new Error("Invalid input: AssignmentGroup does not belong to the CourseInfo");
    }

    const assignments = new Map(AssignmentGroup.assignments.map(assignment => [assignment.id, assignment]));

    const learners = LearnerSubmissions.reduce((acc, submission) => {
        const assignment = assignments.get(submission.assignment_id);
        if (!assignment) {
            throw new Error(`Invalid input: No assignment found with id ${submission.assignment_id}`);
        }

        if (new Date() < new Date(assignment.due_at)) {
            return acc;
        }

        let score = submission.submission.score;
        if (isNaN(score) || isNaN(assignment.points_possible) || assignment.points_possible === 0) {
            throw new Error("Invalid input: points_possible must be a number and cannot be zero");
        }

        score /= assignment.points_possible;
        if (new Date(submission.submission.submitted_at) > new Date(assignment.due_at)) {
            score -= 0.1 * assignment.points_possible;
        }

        if (!acc.has(submission.learner_id)) {
            acc.set(submission.learner_id, { id: submission.learner_id, scores: {}, total: 0, count: 0 });
        }

        const learner = acc.get(submission.learner_id);
        learner.scores[submission.assignment_id] = score;
        learner.total += score;
        learner.count++;

        return acc;
    }, new Map());

    return Array.from(learners.values()).map(learner => {
        const result = { id: learner.id, ...learner.scores };
        result.avg = learner.total / learner.count;
        return result;
    });
}

// The provided course information.
const CourseInfo = {
  id: 451,
  name: "Introduction to JavaScript"
};

// The provided assignment group.
const AssignmentGroup = {
  id: 12345,
  name: "Fundamentals of JavaScript",
  course_id: 451,
  group_weight: 25,
  assignments: [
    {
      id: 1,
      name: "Declare a Variable",
      due_at: "2023-01-25",
      points_possible: 50
    },
    {
      id: 2,
      name: "Write a Function",
      due_at: "2023-02-27",
      points_possible: 150
    },
    {
      id: 3,
      name: "Code the World",
      due_at: "3156-11-15",
      points_possible: 500
    }
  ]
};

// The provided learner submission data.
const LearnerSubmissions = [
  {
    learner_id: 125,
    assignment_id: 1,
    submission: {
      submitted_at: "2023-01-25",
      score: 47
    }
  },
  {
    learner_id: 125,
    assignment_id: 2,
    submission: {
      submitted_at: "2023-02-12",
      score: 150
    }
  },
  {
    learner_id: 125,
    assignment_id: 3,
    submission: {
      submitted_at: "2023-01-25",
      score: 400
    }
  },
  {
    learner_id: 132,
    assignment_id: 1,
    submission: {
      submitted_at: "2023-01-24",
      score: 39
    }
  },
  {
    learner_id: 132,
    assignment_id: 2,
    submission: {
      submitted_at: "2023-03-07",
      score: 140
    }
  }
];

// Call the function with the provided data
const result = getLearnerData(CourseInfo, AssignmentGroup, LearnerSubmissions);

// Log the result
console.log(result);
